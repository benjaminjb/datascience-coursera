data <- read.csv("~/datasciencecoursera/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",colClasses = "character")
states <- unique(data$State)
if (!"TX" %in% states) {
stop(“invalid state”)
}
"TX" %in% states
!"TX" %in% states
if (!"TX" %in% states) print("Yay")
if (!"TX" %in% states) prints("Yay")
if (!"TX" %in% states) outcome <- "Yay"
iter <- 12
if(iter > 10) stop("too many iterations")
if("TX" %in% states) stop("too many iterations")
if(!"TX" %in% states) stop("too many iterations")
best <- function(state, outcome) {
data <- read.csv("~/datasciencecoursera/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",colClasses = "character")
states <- unique(data$State)
if (!state %in% states) stop(“invalid state”)
if (!outcome %in% c("heart attack","heart failure","pneumonia")) {
stop("invalid outcome")
}
switcher <- grep(outcome,c("heart attack","heart failure","pneumonia"))
if (switcher == 1)
switcher = switcher + 10
if (switcher == 2)
switcher = switcher + 15
if (switcher == 3)
switcher = switcher + 20
hospital <- split(data,data["State"])$state
newhospital <- hospital[order(hospital[,switcher]),]
count <- 1
lowhospital <- data.frame(colnames=c(names(hospital)))
lowest <- newhospital[1,switcher]
if (newhospital[count,switcher] == lowest) {
lowhospital[count] <- newhospital[count]
count = count + 1
}
alphospital <- lowhospital[order($Hospital.Name),]
print(alphospital[1,2])
}
data <- read.csv("~/datasciencecoursera/rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",colClasses = "character")
states <- unique(data$State)
states
"TX" in states
"TX" %in% states
"TJ" %in% states
state<-"TX"
if (!state %in% states) stop(“invalid state”)
grep(state,states)
if (grep(state,states))
stop(“invalid state”)
if (grep(state,states)) yes <- "TRUE"
state <- "TJ"
if (grep(state,states)) yes <- 5
state
grep(state,states)
if (!state %in% states) check1 <- state
state <- TX
state <- "TX"
if (!state %in% states) check1 <- state
