install.packages(KernSmooth)
a <- available.packages()
help("install.packages")
install.packages(available)
install.packages(available.packages)
available.packages()
available.packages(KernSmooth)
available.packages(KernSmooth 2.23-12.tgz)
available.packages(KernSmooth R)
help("find")
download.packages(KernSmooth)
help("available.packages")
available.packages(kernsmooth)
available.packages(filters = kernsmooth)
available.packages(filters = "kernsmooth")
find.packages(kernsmooth)
library(KernSmooth)
R.version.string
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char = c("My","name","is")
my_char <- c("My","name","is")
my_char
past(my_char,collapse = " ")
paste(my_char,collapse = " ")
my_name <- c(my_char, "Ben")
my_name
paste(my_char,collapse = " ")
paste(my_name,collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z",sep=""))
paste(1:3, c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_na <- my_data == NA
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- (c11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(cnames,my_data)
?colnames
colnames(my_data) <- cnames
my_data
swirl()
library(swirl)
install_from_swirl("Data Analysis")
install_from_swirl("Open Intro")
swirl
swirl()
quit
bye
bye()
quit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
library(datasets)
data(iris)
?iris
Sepal.length
iris
iris$species
iris$species(virginica)
iris$Species
iris$Species(virginica)
iris$Species("virginica")
?iris$Species
?iris
iris3
iris3[virginica]
iris3[[virginica]]
iris3$virginica
iris3.virginica
iris
iris[,5]
iris3[,,3][1]
iris3
iris3[,,3]
dimnames(iris3[,,3])
iris3[,,3]$Sepal L.
iris3[,,3][$Sepal L.]
iris3[,,3][Sepal L.]
iris3[,,3]["Sepal L."]
iris3[,,3][[Sepal L.]]
iris3[,,3]
iris3[,,3][1,]
iris3[,,3][,1]
mean(iris3[,,3][,1])
colMeans(iris)
apply(iris,2,mean)
iris
apply(iris[,1:4],2,mean)
iris[,1:4]
iris[1:4,]
iris[,1:4]
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[1,]
tapply(mtcars$hp, mtcars$cyl, mean)$4
tapply(mtcars$hp, mtcars$cyl, mean)[4]
tapply(mtcars$hp, mtcars$cyl, mean)["4"]
tapply(mtcars$hp, mtcars$cyl, mean)["8"] - tapply(mtcars$hp, mtcars$cyl, mean)["4"]
debug(ls)
ls
with(mtcars, tapply(mpg, cyl, mean))
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
ls
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
pwd
cd
ls
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
quit
